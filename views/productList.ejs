<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <title>All Product List</title>
    <style>
        #resultTable {
            max-width: 90%; /* Adjust the max-width as needed */
            margin: auto;
        }
        #ecomTitle{
          text-align: center;
        }
        #categoryTitle{
          max-width: 90%;
          margin:auto;
          text-transform: uppercase;
          
        }
        th, td {
            border: 1px solid #dddddd;
            text-align: left;
            padding: 8px;
        }

        th {
            background-color: #f2f2f2;
        }

        .pagination{
          display: flex;
          gap:5px;
          justify-content: center;
        }
    </style>
    
</head>
<body>
  <div id="ecomTitle">
      <h1>E-Commerce</h1>
  </div>
  <div id="categoryTitle">
    <div class="row">
        <div class="col-1">
            <button type="button" class="btn btn-dark ml-auto " id="homeButton">Home</button>
        </div>
        <div class="col-2">
            <button type="button" class="btn btn-dark ml-auto " id="allProd">All products</button>
        </div>
        <div class="col-3 ms-auto">
            <select id="filter" class="form-select" aria-label="Default select example">
                <option selected disabled>Select an option</option>
                <option value="1">Clothing</option>
                <option value="2">Electronics</option>
                <option value="3">Food</option>
                <option value="4">Pharmacy</option>
                <option value="5">Optics</option>
            </select>
        </div>
        <div class="col">
            <div class="input-group mb-3">
                <input type="text" class="ms-auto" placeholder="Search something..." id="searchQuery" name="searchQuery" style="width: 50%;">
                <button class="btn btn-dark" type="button" id="searchBtn"><i class="fa fa-search" aria-hidden="true"></i></button>
            </div>
        </div>
    </div>
    <hr>
            
            
            <h6>Product List:</h6>
    </div>
  </div>
  <div id="resultTable">
      <table class="table">
          <thead class="table-dark">
              <tr>
                  <th scope="col">Id</th>
                  <th scope="col">Name</th>
                  <th scope="col">CId</th>
                  <th scope="col">Category</th>
                  <th scope="col">Brand</th>
                  <th scope="col">MRP</th>
                  <th scope="col">Discount Price</th>
                  <th scope="col">Stock</th>
              </tr>
          </thead>
          <tbody id="categoryTableBody">
              <!-- Data will be dynamically added here -->
          </tbody>
      </table>
    </div>

    
    
    <div class="pagination" id="pagination">
      <!-- pagination will be maintained here dynamically -->
      
    </div>

<script>
    document.getElementById('filter').addEventListener('change', () => {
        const selectedValue = document.getElementById('filter').value;
        let apiUrl;
    // Redirect to the new URL based on the selected value
    switch (selectedValue) {
        case '1':
            apiUrl = 'http://localhost:3000/Clothing?page=1';
            break;
        case '2':
            apiUrl= 'http://localhost:3000/electronics?page=1';
            break;
        case '3':
            apiUrl = 'http://localhost:3000/food?page=1';
            break;
        case '4':
            apiUrl = 'http://localhost:3000/pharmacy?page=1';
            break;
        case '5':
            apiUrl = 'http://localhost:3000/optics?page=1';
            break;
    }

    fetch(apiUrl)
    .then(response => {
        if (!response.ok) {
            throw new Error(`HTTP error! Status: ${response.status}`);
        }
        // If the request is successful, redirect the user
        window.location.href = apiUrl;
    })
    .catch(error => {
        console.error('Fetch error:', error);
        // Handle the error as needed
    });

    });
    //for all products button
    document.addEventListener("DOMContentLoaded", function () {
            document.getElementById("allProd").addEventListener("click", function () {
                let productListURL="http://localhost:3000/productList?page=1";
                fetch(productListURL)
            .then(response => {
                // Check if the response status is OK (200-299)
                if (!response.ok) {
                    throw new Error(`HTTP error! Status: ${response.status}`);
                }
                // Navigate to the '/productList' URL
                window.location.href = productListURL;
            })
            .catch(error => {
                // Handle errors during the fetch request
                console.error('Fetch Error:', error);
            });
        });
});
    let currentPage=<%=page%>;
    let pageCount=0;

    document.getElementById('searchQuery').addEventListener('keypress', function(event) {
    if (event.key === 'Enter') {
      document.getElementById('searchBtn').click();
    }
  });
    const resultTableBody = document.getElementById('categoryTableBody');


    document.getElementById('searchBtn').addEventListener('click', () => {
        document.getElementById('pagination').style.display="none";
        const query = document.getElementById('searchQuery').value;
        fetch(`search?q=${query}`)
            .then(response => response.json())
            .then(data => {
                // Clear existing table rows
                resultTableBody.innerHTML = "";

                // Update the table with the fetched data
                data.forEach(doc => {
                    const row = document.createElement('tr');
                    row.innerHTML = `
                        <td>${doc.pid}</td>
                        <td>${doc.name}</td>
                        <td>${doc.cid}</td>
                        <td>${doc.category}</td>
                        <td>${doc.brand}</td>
                        <td>${doc.mrp}</td>
                        <td>${doc.discount_price}</td>
                        <td>${doc.stock}</td>
                    `;
                    resultTableBody.appendChild(row);
                });
            })
            .catch(error => console.error('Error fetching data from Solr:', error));
    });

    
    document.addEventListener("DOMContentLoaded", function () {
        // Fetch data from the server
        fetch(`api/productList?page=<%=page%>`)  // Assuming your server exposes an API endpoint
            .then(response => response.json())
            .then(data => {
                // Populate the table with data
                const tableBody = document.getElementById('categoryTableBody');
                tableBody.innerHTML='';
        //samplequery=http://localhost:8983/solr/product/select?fq=name%3ASmartwatch&q.op=OR&q=*%3A*
        //to encode a url encodeURIComponent(query);
                pageCount=parseInt(data.pageCount);
                
                data.items.forEach(category => {
                    const row = `<tr>
                        <th scope="row">${category.pid}</th>
                        <td>${category.name}</td>
                        <td>${category.cid}</td>
                        <td>${category.category}</td>
                        <td>${category.brand}</td>
                        <td>${category.mrp}</td>
                        <td>${category.discount_price}</td>
                        <td>${category.stock}</td>
                        

                    </tr>`;
                    tableBody.innerHTML += row;

                });
                //console.log(pageCount);
                pagination();
            })
            .catch(error => console.error('Error fetching products:', error));

    });

    function pagination(){
      let paginationDiv=document.getElementById('pagination');
      paginationDiv.innerHTML='';
      if(pageCount<=10){
        for(let i=1;i<=pageCount;i++){
        paginationDiv.innerHTML+=`<a href="/productList?page=${i}" class="mr-2"><button type="button" class="btn btn-dark">${i}</button></a>`;
        }
      }else{
        paginationDiv.innerHTML += `<a href="/productList?page=1" class="mr-2"><button type="button" class="btn btn-dark">First</button></a>`;

            // Add Previous Two Pages button
            if (currentPage > 2) {
            paginationDiv.innerHTML += `<a href="/productList?page=${currentPage - 2}" class="mr-2"><button type="button" class="btn btn-dark">${currentPage - 2}</button></a>`;
            }
            if (currentPage > 1) {
            paginationDiv.innerHTML += `<a href="/productList?page=${currentPage - 1}" class="mr-2"><button type="button" class="btn btn-dark">${currentPage - 1}</button></a>`;
            }

            // Add Current Page button
            paginationDiv.innerHTML += `<a href="/productList?page=${currentPage}" class="mr-2"><button type="button" class="btn btn-dark">${currentPage}</button></a>`;

            // Add Next Two Pages button
            if (currentPage < pageCount - 1) {
            paginationDiv.innerHTML += `<a href="/productList?page=${currentPage + 1}" class="mr-2"><button type="button" class="btn btn-dark">${currentPage + 1}</button></a>`;
            }
            if (currentPage < pageCount - 2) {
            paginationDiv.innerHTML += `<a href="/productList?page=${currentPage + 2}" class="mr-2"><button type="button" class="btn btn-dark">${currentPage + 2}</button></a>`;
            }

            // Add Last Page button
            paginationDiv.innerHTML += `<a href="/productList?page=${pageCount}" class="mr-2"><button type="button" class="btn btn-dark">Last</button></a>`;

        
      }
    }
            document.addEventListener("DOMContentLoaded", function () {
            document.getElementById("homeButton").addEventListener("click", function () {
                fetch('/')
            .then(response => {
                // Check if the response status is OK (200-299)
                if (!response.ok) {
                    throw new Error(`HTTP error! Status: ${response.status}`);
                }
                // Navigate to the '/' URL
                window.location.href = '/';
            })
            .catch(error => {
                // Handle errors during the fetch request
                console.error('Fetch Error:', error);
            });
        });
    });
</script>
</body>
</html>