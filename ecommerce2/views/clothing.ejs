<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <title>Clothing</title>
    <style>
        #resultTable {
            max-width: 90%; /* Adjust the max-width as needed */
            margin: auto;
        }
        #ecomTitle{
          text-align: center;
        }
        #categoryTitle{
          max-width: 90%;
          margin:auto;
          text-transform: uppercase;
          
        }
        th, td {
            border: 1px solid #dddddd;
            text-align: left;
            padding: 8px;
        }

        th {
            background-color: #f2f2f2;
        }
        .pagination{
          a{
            text-decoration: none;
            color: white;
          }
        }

        .pagination{
          display: flex;
          gap:5px;
          justify-content: center;
        }
    </style>
    
</head>
<body>
  <div id="ecomTitle">
      <h1>E-Commerce</h1>
  </div>
  <div id="categoryTitle">
            <button type="button" class="btn btn-dark ml-auto " id="homeButton">Home</button><hr>
            <h6>Clothing Product List:</h6>
    </div>
  </div>
  <div id="resultTable">
      <table class="table">
          <thead class="table-dark">
              <tr>
                  <th scope="col">Id</th>
                  <th scope="col">Name</th>
                  <th scope="col">CId</th>
                  <th scope="col">Category</th>
                  <th scope="col">Brand</th>
                  <th scope="col">MRP</th>
                  <th scope="col">Discount Price</th>
                  <th scope="col">Stock</th>
              </tr>
          </thead>
          <tbody id="categoryTableBody">
              <!-- Data will be dynamically added here -->
          </tbody>
      </table>
    </div>
    <div class="pagination" id="pagination">
      <!-- pagination will be maintained here dynamically -->
      
    </div>
    <script>
        let currentPage = <%=page%> ;
        // let startLimit = <%=limit%> ;
        let pageCount=0;
        
        document.addEventListener("DOMContentLoaded", function () {
            // Fetch data from the server
            fetch(`api/clothing?page=<%=page%>`)  // Assuming your server exposes an API endpoint
                .then(response => response.json())
                .then(data => {
                    // Populate the table with data
                    const tableBody = document.getElementById('categoryTableBody');
                    tableBody.innerHTML='';
                    pageCount=parseInt(data.pageCount);
                    
                    data.items.forEach(category => {
                        const row = `<tr>
                            <th scope="row">${category.id}</th>
                            <td>${category.name}</td>
                            <td>${category.cid}</td>
                            <td>${category.category}</td>
                            <td>${category.brand}</td>
                            <td>${category.mrp}</td>
                            <td>${category.discount_price}</td>
                            <td>${category.stock}</td>
                            
    
                        </tr>`;
                        tableBody.innerHTML += row;
    
                    });
                    console.log(pageCount);
                    pagination();
                })
                .catch(error => console.error('Error fetching products:', error));
    
        });
    
        function pagination(){
          let paginationDiv=document.getElementById('pagination');
          paginationDiv.innerHTML='';
          if(pageCount<=10){
            for(let i=1;i<=pageCount;i++){
            paginationDiv.innerHTML+=`<a href="/clothing?page=${i}" class="mr-2"><button type="button" class="btn btn-dark">${i}</button></a>`;
          
            }
          }else{
            paginationDiv.innerHTML += `<a href="/clothing?page=1" class="mr-2"><button type="button" class="btn btn-dark">First</button></a>`;
    
                // Add Previous Two Pages button
                if (currentPage > 2) {
                paginationDiv.innerHTML += `<a href="/clothing?page=${currentPage - 2}" class="mr-2"><button type="button" class="btn btn-dark">${currentPage - 2}</button></a>`;
                }
                if (currentPage > 1) {
                paginationDiv.innerHTML += `<a href="/clothing?page=${currentPage - 1}" class="mr-2"><button type="button" class="btn btn-dark">${currentPage - 1}</button></a>`;
                }
    
                // Add Current Page button
                paginationDiv.innerHTML += `<a href="/clothing?page=${currentPage}" class="mr-2"><button type="button" class="btn btn-dark">${currentPage}</button></a>`;
    
                // Add Next Two Pages button
                if (currentPage < pageCount - 1) {
                paginationDiv.innerHTML += `<a href="/clothing?page=${currentPage + 1}" class="mr-2"><button type="button" class="btn btn-dark">${currentPage + 1}</button></a>`;
                }
                if (currentPage < pageCount - 2) {
                paginationDiv.innerHTML += `<a href="/clothing?page=${currentPage + 2}" class="mr-2"><button type="button" class="btn btn-dark">${currentPage + 2}</button></a>`;
                }
    
                // Add Last Page button
                paginationDiv.innerHTML += `<a href="/clothing?page=${pageCount}" class="mr-2"><button type="button" class="btn btn-dark">Last</button></a>`;
    
            
          }
            
          
        }
    
    
          document.addEventListener("DOMContentLoaded", function () {
                document.getElementById("homeButton").addEventListener("click", function () {
                    fetch('/')
                .then(response => {
                    // Check if the response status is OK (200-299)
                    if (!response.ok) {
                        throw new Error(`HTTP error! Status: ${response.status}`);
                    }
                    // Navigate to the '/' URL
                    window.location.href = '/';
                })
                .catch(error => {
                    // Handle errors during the fetch request
                    console.error('Fetch Error:', error);
                });
            });
        });
    </script>
</body>
</html>